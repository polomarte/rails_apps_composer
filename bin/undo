#!/usr/bin/env ruby

require 'aws-sdk'

app_name                = ENV['APP_NAME']
host_domain             = ENV['DOMAIN']
heroku_app_name         = ENV['HEROKU_APP']
heroku_app_name_staging = "#{heroku_app_name}-staging"

unless ENV['APP_NAME'] && ENV['DOMAIN'] && ENV['HEROKU_APP']
  puts 'The variables below must be present:'
  puts 'APP_NAME, HEROKU_APP, DOMAIN'

  return
end

`heroku addons:destroy newrelic -a #{heroku_app_name} --confirm #{heroku_app_name}`
`heroku addons:destroy rollbar -a #{heroku_app_name} --confirm #{heroku_app_name}`
`heroku addons:destroy logentries -a #{heroku_app_name} --confirm #{heroku_app_name}`
`heroku addons:destroy memcachier -a #{heroku_app_name} --confirm #{heroku_app_name}`
`heroku addons:destroy sendgrid -a #{heroku_app_name} --confirm #{heroku_app_name}`

`heroku domains:clear -a #{heroku_app_name}`
`heroku domains:clear -a #{heroku_app_name_staging}`

Aws.config[:credentials] = Aws::Credentials.new(
  ENV['POLOMARTE_COMPOSER_AWS_ACCESS_KEY_ID'],
  ENV['POLOMARTE_COMPOSER_AWS_SECRET_ACCESS_KEY_ID'])

Aws.config[:region] = 'us-east-1'

s3 = Aws::S3::Resource.new

puts 'Deleting buckets'
s3.bucket("assets.production.#{host_domain}").delete rescue puts('Production bucket already deleted')
s3.bucket("assets.staging.#{host_domain}").delete rescue puts('Staging bucket already deleted')

puts 'Deleting project user'
iam = Aws::IAM::Resource.new
user = iam.user app_name
user.policy("#{app_name}_s3_access").delete rescue puts('Policy already deleted')
user.access_keys.first.delete rescue puts('Access keys already deleted')
user.delete rescue puts('User already deleted')
